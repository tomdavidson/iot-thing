version: '2'

volumes:
  node-red-data:
  zwave-config:
  zigbee-data:
  mosquitto:


services:

  # https://github.com/balenablocks/hostname
  hostname:
    build: hostname
    labels:
      io.balena.features.supervisor-api: 1
    environment:
      SET_HOSTNAME: iot-things
    restart: no

  reverse-proxy:
    image: bh.cr/gh_ajlennon/reverse-proxy
    container_name: traefik
    command:
      - "--log.level=DEBUG"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/traefik.log"
      - "--api.dashboard=true"
      - "--api.insecure"
      - "--providers.docker=true"
      - "--providers.docker.endpoint=unix:///var/run/balena-engine.sock"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    labels:
      io.balena.features.balena-socket: '1'
    ports:
      - "80:80"
      - "8080:8080"
    restart: always


  mqtt:
    # build: mosquitto
    image: eclipse-mosquitto:1.6.15
    container_name: mosquitto
    ports:
      - "1883:1883"
      - "9001:9001"
    volumes:
      - mosquitto:/etc/mosquitto
    restart: unless_stopped

  node-red:
    image: bh.cr/gh_ajlennon/balena-node-red
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.node-red.loadbalancer.server.port=3080"
      - "traefik.http.routers.node-red.entrypoints=web"
      - "traefik.http.routers.node-red.rule=PathPrefix(`/node-red`)"
    environment:
      PORT: 3080
      HTTP_ROOT: "node-red"
      USERNAME: "balena"
      PASSWORD: "balena"
      ENCRIPTION_KEY: "balena"
    ports:
      - 3080
    volumes:
      - 'node-red-data:/data'
    depends_on:
      reverse-proxy:
        condition: service_started
    restart: unless-stopped

  zigbee:
    build: zigbee2mqtt
    container_name: zigbee2mqtt
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.zigbee.entrypoints=web"
      - "traefik.http.routers.zigbee.rule=PathPrefix(`/zigbee`)"
      - traefik.http.services.zwavejs.loadbalancer.server.port=5000
    ports:
      - 5000/tcp
    volumes:
      - zigbee-data:/app/data
    environment:
      - DATA=/app/data
    cap_add:
      - SYS_RAWIO
    devices:
      - "/dev/serial/by-id/usb-ITEAD_SONOFF_Zigbee_3.0_USB_Dongle_Plus_V2_20231118155043-if00:/dev/ttyACM0"
    depends_on:
      reverse-proxy:
        condition: service_started
      mqtt:
        condition: service_started
    restart: unless_stoped


  zwave:
    build: zwavejs
    container_name: zwavejs
    labels:
      - traefik.enable=true
      - traefik.http.services.zwave.loadbalancer.server.port=7080
      - traefik.http.routers.zwave.entrypoints=web
      - traefik.http.routers.zwave.rule=PathPrefix(`/zwave`)
      - traefik.http.middlewares.zwave.headers.customrequestheaders.X-Script-Name=X-External-Path:/zwave/
      - traefik.http.middlewares.zwave-strip-basepath.stripprefix.prefixes=/zwave
    environment:
      - SESSION_SECRET=mysupersecretkey
      - ZWAVEJS_EXTERNAL_CONFIG=/usr/src/app/store/.config-db
      - BASE_PATH=/zwave/
    ports:
      - '7080'
      - '3000'
    volumes:
      - zwave-config:/usr/src/app/store
    cap_add:
      - SYS_RAWIO
    devices:
      - '/dev/serial/by-id/usb-Zooz_800_Z-Wave_Stick_533D004242-if00:/dev/zwave'
    depends_on:
      reverse-proxy:
        condition: service_started
      mqtt:
        condition: service_started
    restart: unless_stoped
